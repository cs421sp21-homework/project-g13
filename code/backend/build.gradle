plugins {
    id 'java'
    id "com.heroku.sdk.heroku-gradle" version "2.0.0"
    id "io.freefair.lombok" version "5.3.0"
}

version '0.0.1'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    implementation 'com.sparkjava:spark-core:2.9.3'
    implementation 'org.slf4j:slf4j-api:1.7.30'
    implementation 'org.slf4j:slf4j-simple:1.7.30'

    implementation 'com.sparkjava:spark-template-mustache:2.7.1'
    implementation 'com.sparkjava:spark-template-handlebars:2.7.1'

    // https://mvnrepository.com/artifact/org.springframework/spring-web
    implementation group: 'org.springframework', name: 'spring-web', version: '3.0.4.RELEASE'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.0.1'
    // https://mvnrepository.com/artifact/org.codehaus.jackson/jackson-core-asl
    implementation group: 'org.codehaus.jackson', name: 'jackson-core-asl', version: '1.9.13'
    // https://mvnrepository.com/artifact/org.codehaus.jackson/jackson-mapper-asl
    implementation group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version: '1.9.13'

    compile 'com.konghq:unirest-java:3.11.09'

}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes 'Main-Class' : 'Server'
    }
    from {
        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

heroku {
    appName="chicken-tinder-13-backend"
    jdkVersion = 15
    processTypes(web: "java -jar build/libs/ChickenTinderBackend-0.0.1.jar")
}

task stage(dependsOn: ['build', 'clean'])
build.mustRunAfter clean
